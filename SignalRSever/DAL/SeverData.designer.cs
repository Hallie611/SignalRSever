#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignalRSever.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db7a44969a30f24bdd9762a2fa008c96a5")]
	public partial class SeverDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblHistory(tblHistory instance);
    partial void UpdatetblHistory(tblHistory instance);
    partial void DeletetblHistory(tblHistory instance);
    partial void InserttblQuestion(tblQuestion instance);
    partial void UpdatetblQuestion(tblQuestion instance);
    partial void DeletetblQuestion(tblQuestion instance);
    partial void InserttblPlayer(tblPlayer instance);
    partial void UpdatetblPlayer(tblPlayer instance);
    partial void DeletetblPlayer(tblPlayer instance);
    #endregion
		
		public SeverDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db7a44969a30f24bdd9762a2fa008c96a5ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SeverDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SeverDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SeverDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SeverDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblHistory> tblHistories
		{
			get
			{
				return this.GetTable<tblHistory>();
			}
		}
		
		public System.Data.Linq.Table<tblQuestion> tblQuestions
		{
			get
			{
				return this.GetTable<tblQuestion>();
			}
		}
		
		public System.Data.Linq.Table<tblPlayer> tblPlayers
		{
			get
			{
				return this.GetTable<tblPlayer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.correctQuestion")]
		public int correctQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlayerName", DbType="NVarChar(50)")] string playerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), playerName, questionID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.wrongQuestion")]
		public int wrongQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlayerName", DbType="NVarChar(50)")] string playerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), playerName, questionID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_history")]
		public ISingleResult<get_historyResult> get_history()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<get_historyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_singel_history")]
		public ISingleResult<get_singel_historyResult> get_singel_history([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlayerName", DbType="NVarChar(50)")] string playerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), playerName, questionID);
			return ((ISingleResult<get_singel_historyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.get_user_info")]
		public ISingleResult<get_user_infoResult> get_user_info([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((ISingleResult<get_user_infoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_History")]
		public int Insert_History([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlayerID", DbType="Int")] System.Nullable<int> playerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), playerID, questionID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_Player")]
		public int Insert_Player([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Level", DbType="Int")] System.Nullable<int> level, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Point", DbType="Int")] System.Nullable<int> point)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, level, point);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.player_disconnect")]
		public int player_disconnect([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Player", DbType="NVarChar(50)")] string player, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Opponent", DbType="NVarChar(50)")] string opponent)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), player, opponent);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_point")]
		public int update_point([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Winner", DbType="NVarChar(50)")] string winner, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WinPoint", DbType="Int")] System.Nullable<int> winPoint, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Loser", DbType="NVarChar(50)")] string loser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LossPoint", DbType="Int")] System.Nullable<int> lossPoint)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), winner, winPoint, loser, lossPoint);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblHistory")]
	public partial class tblHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlayerID;
		
		private int _QuestionID;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Rright;
		
		private System.Nullable<int> _Wrong;
		
		private EntityRef<tblQuestion> _tblQuestion;
		
		private EntityRef<tblPlayer> _tblPlayer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlayerIDChanging(int value);
    partial void OnPlayerIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnRrightChanging(System.Nullable<int> value);
    partial void OnRrightChanged();
    partial void OnWrongChanging(System.Nullable<int> value);
    partial void OnWrongChanged();
    #endregion
		
		public tblHistory()
		{
			this._tblQuestion = default(EntityRef<tblQuestion>);
			this._tblPlayer = default(EntityRef<tblPlayer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					if (this._tblPlayer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._tblQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rright", DbType="Int")]
		public System.Nullable<int> Rright
		{
			get
			{
				return this._Rright;
			}
			set
			{
				if ((this._Rright != value))
				{
					this.OnRrightChanging(value);
					this.SendPropertyChanging();
					this._Rright = value;
					this.SendPropertyChanged("Rright");
					this.OnRrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wrong", DbType="Int")]
		public System.Nullable<int> Wrong
		{
			get
			{
				return this._Wrong;
			}
			set
			{
				if ((this._Wrong != value))
				{
					this.OnWrongChanging(value);
					this.SendPropertyChanging();
					this._Wrong = value;
					this.SendPropertyChanged("Wrong");
					this.OnWrongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestion_tblHistory", Storage="_tblQuestion", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public tblQuestion tblQuestion
		{
			get
			{
				return this._tblQuestion.Entity;
			}
			set
			{
				tblQuestion previousValue = this._tblQuestion.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestion.Entity = null;
						previousValue.tblHistories.Remove(this);
					}
					this._tblQuestion.Entity = value;
					if ((value != null))
					{
						value.tblHistories.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("tblQuestion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlayer_tblHistory", Storage="_tblPlayer", ThisKey="PlayerID", OtherKey="PlayerID", IsForeignKey=true)]
		public tblPlayer tblPlayer
		{
			get
			{
				return this._tblPlayer.Entity;
			}
			set
			{
				tblPlayer previousValue = this._tblPlayer.Entity;
				if (((previousValue != value) 
							|| (this._tblPlayer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPlayer.Entity = null;
						previousValue.tblHistories.Remove(this);
					}
					this._tblPlayer.Entity = value;
					if ((value != null))
					{
						value.tblHistories.Add(this);
						this._PlayerID = value.PlayerID;
					}
					else
					{
						this._PlayerID = default(int);
					}
					this.SendPropertyChanged("tblPlayer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblQuestion")]
	public partial class tblQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private string _QuestionType;
		
		private System.Nullable<int> _QuestionDif;
		
		private string _QuestionSrc;
		
		private string _Type;
		
		private string _Positionwidth;
		
		private string _Positionheight;
		
		private string _PositionTop;
		
		private string _PositionLeft;
		
		private string _ListA;
		
		private string _ListB;
		
		private string _ListC;
		
		private string _A;
		
		private string _B;
		
		private string _C;
		
		private string _ListAnswer;
		
		private string _Answer;
		
		private EntitySet<tblHistory> _tblHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnQuestionTypeChanging(string value);
    partial void OnQuestionTypeChanged();
    partial void OnQuestionDifChanging(System.Nullable<int> value);
    partial void OnQuestionDifChanged();
    partial void OnQuestionSrcChanging(string value);
    partial void OnQuestionSrcChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPositionwidthChanging(string value);
    partial void OnPositionwidthChanged();
    partial void OnPositionheightChanging(string value);
    partial void OnPositionheightChanged();
    partial void OnPositionTopChanging(string value);
    partial void OnPositionTopChanged();
    partial void OnPositionLeftChanging(string value);
    partial void OnPositionLeftChanged();
    partial void OnListAChanging(string value);
    partial void OnListAChanged();
    partial void OnListBChanging(string value);
    partial void OnListBChanged();
    partial void OnListCChanging(string value);
    partial void OnListCChanged();
    partial void OnAChanging(string value);
    partial void OnAChanged();
    partial void OnBChanging(string value);
    partial void OnBChanged();
    partial void OnCChanging(string value);
    partial void OnCChanged();
    partial void OnListAnswerChanging(string value);
    partial void OnListAnswerChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public tblQuestion()
		{
			this._tblHistories = new EntitySet<tblHistory>(new Action<tblHistory>(this.attach_tblHistories), new Action<tblHistory>(this.detach_tblHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="NChar(10)")]
		public string QuestionType
		{
			get
			{
				return this._QuestionType;
			}
			set
			{
				if ((this._QuestionType != value))
				{
					this.OnQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QuestionType = value;
					this.SendPropertyChanged("QuestionType");
					this.OnQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionDif", DbType="Int")]
		public System.Nullable<int> QuestionDif
		{
			get
			{
				return this._QuestionDif;
			}
			set
			{
				if ((this._QuestionDif != value))
				{
					this.OnQuestionDifChanging(value);
					this.SendPropertyChanging();
					this._QuestionDif = value;
					this.SendPropertyChanged("QuestionDif");
					this.OnQuestionDifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionSrc", DbType="NVarChar(50)")]
		public string QuestionSrc
		{
			get
			{
				return this._QuestionSrc;
			}
			set
			{
				if ((this._QuestionSrc != value))
				{
					this.OnQuestionSrcChanging(value);
					this.SendPropertyChanging();
					this._QuestionSrc = value;
					this.SendPropertyChanged("QuestionSrc");
					this.OnQuestionSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Positionwidth", DbType="NChar(10)")]
		public string Positionwidth
		{
			get
			{
				return this._Positionwidth;
			}
			set
			{
				if ((this._Positionwidth != value))
				{
					this.OnPositionwidthChanging(value);
					this.SendPropertyChanging();
					this._Positionwidth = value;
					this.SendPropertyChanged("Positionwidth");
					this.OnPositionwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Positionheight", DbType="NChar(10)")]
		public string Positionheight
		{
			get
			{
				return this._Positionheight;
			}
			set
			{
				if ((this._Positionheight != value))
				{
					this.OnPositionheightChanging(value);
					this.SendPropertyChanging();
					this._Positionheight = value;
					this.SendPropertyChanged("Positionheight");
					this.OnPositionheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionTop", DbType="NChar(10)")]
		public string PositionTop
		{
			get
			{
				return this._PositionTop;
			}
			set
			{
				if ((this._PositionTop != value))
				{
					this.OnPositionTopChanging(value);
					this.SendPropertyChanging();
					this._PositionTop = value;
					this.SendPropertyChanged("PositionTop");
					this.OnPositionTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionLeft", DbType="NChar(10)")]
		public string PositionLeft
		{
			get
			{
				return this._PositionLeft;
			}
			set
			{
				if ((this._PositionLeft != value))
				{
					this.OnPositionLeftChanging(value);
					this.SendPropertyChanging();
					this._PositionLeft = value;
					this.SendPropertyChanged("PositionLeft");
					this.OnPositionLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListA", DbType="NVarChar(50)")]
		public string ListA
		{
			get
			{
				return this._ListA;
			}
			set
			{
				if ((this._ListA != value))
				{
					this.OnListAChanging(value);
					this.SendPropertyChanging();
					this._ListA = value;
					this.SendPropertyChanged("ListA");
					this.OnListAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListB", DbType="NVarChar(50)")]
		public string ListB
		{
			get
			{
				return this._ListB;
			}
			set
			{
				if ((this._ListB != value))
				{
					this.OnListBChanging(value);
					this.SendPropertyChanging();
					this._ListB = value;
					this.SendPropertyChanged("ListB");
					this.OnListBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListC", DbType="NVarChar(50)")]
		public string ListC
		{
			get
			{
				return this._ListC;
			}
			set
			{
				if ((this._ListC != value))
				{
					this.OnListCChanging(value);
					this.SendPropertyChanging();
					this._ListC = value;
					this.SendPropertyChanged("ListC");
					this.OnListCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="NChar(50)")]
		public string A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="NChar(50)")]
		public string B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="NChar(50)")]
		public string C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListAnswer", DbType="NVarChar(100)")]
		public string ListAnswer
		{
			get
			{
				return this._ListAnswer;
			}
			set
			{
				if ((this._ListAnswer != value))
				{
					this.OnListAnswerChanging(value);
					this.SendPropertyChanging();
					this._ListAnswer = value;
					this.SendPropertyChanged("ListAnswer");
					this.OnListAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NChar(50)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestion_tblHistory", Storage="_tblHistories", ThisKey="QuestionID", OtherKey="QuestionID")]
		public EntitySet<tblHistory> tblHistories
		{
			get
			{
				return this._tblHistories;
			}
			set
			{
				this._tblHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblHistories(tblHistory entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestion = this;
		}
		
		private void detach_tblHistories(tblHistory entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlayer")]
	public partial class tblPlayer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlayerID;
		
		private string _PlayerName;
		
		private System.Nullable<int> _PlayerLevel;
		
		private System.Nullable<int> _PlayerPoint;
		
		private EntitySet<tblHistory> _tblHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlayerIDChanging(int value);
    partial void OnPlayerIDChanged();
    partial void OnPlayerNameChanging(string value);
    partial void OnPlayerNameChanged();
    partial void OnPlayerLevelChanging(System.Nullable<int> value);
    partial void OnPlayerLevelChanged();
    partial void OnPlayerPointChanging(System.Nullable<int> value);
    partial void OnPlayerPointChanged();
    #endregion
		
		public tblPlayer()
		{
			this._tblHistories = new EntitySet<tblHistory>(new Action<tblHistory>(this.attach_tblHistories), new Action<tblHistory>(this.detach_tblHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="NVarChar(50)")]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this.OnPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._PlayerName = value;
					this.SendPropertyChanged("PlayerName");
					this.OnPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerLevel", DbType="Int")]
		public System.Nullable<int> PlayerLevel
		{
			get
			{
				return this._PlayerLevel;
			}
			set
			{
				if ((this._PlayerLevel != value))
				{
					this.OnPlayerLevelChanging(value);
					this.SendPropertyChanging();
					this._PlayerLevel = value;
					this.SendPropertyChanged("PlayerLevel");
					this.OnPlayerLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerPoint", DbType="Int")]
		public System.Nullable<int> PlayerPoint
		{
			get
			{
				return this._PlayerPoint;
			}
			set
			{
				if ((this._PlayerPoint != value))
				{
					this.OnPlayerPointChanging(value);
					this.SendPropertyChanging();
					this._PlayerPoint = value;
					this.SendPropertyChanged("PlayerPoint");
					this.OnPlayerPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlayer_tblHistory", Storage="_tblHistories", ThisKey="PlayerID", OtherKey="PlayerID")]
		public EntitySet<tblHistory> tblHistories
		{
			get
			{
				return this._tblHistories;
			}
			set
			{
				this._tblHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblHistories(tblHistory entity)
		{
			this.SendPropertyChanging();
			entity.tblPlayer = this;
		}
		
		private void detach_tblHistories(tblHistory entity)
		{
			this.SendPropertyChanging();
			entity.tblPlayer = null;
		}
	}
	
	public partial class get_historyResult
	{
		
		private int _PlayerID;
		
		private int _QuestionID;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Rright;
		
		private System.Nullable<int> _Wrong;
		
		public get_historyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this._PlayerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this._QuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rright", DbType="Int")]
		public System.Nullable<int> Rright
		{
			get
			{
				return this._Rright;
			}
			set
			{
				if ((this._Rright != value))
				{
					this._Rright = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wrong", DbType="Int")]
		public System.Nullable<int> Wrong
		{
			get
			{
				return this._Wrong;
			}
			set
			{
				if ((this._Wrong != value))
				{
					this._Wrong = value;
				}
			}
		}
	}
	
	public partial class get_singel_historyResult
	{
		
		private string _PlayerName;
		
		private int _QuestionID;
		
		private System.Nullable<int> _Rright;
		
		private System.Nullable<int> _Wrong;
		
		public get_singel_historyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="NVarChar(50)")]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this._PlayerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this._QuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rright", DbType="Int")]
		public System.Nullable<int> Rright
		{
			get
			{
				return this._Rright;
			}
			set
			{
				if ((this._Rright != value))
				{
					this._Rright = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wrong", DbType="Int")]
		public System.Nullable<int> Wrong
		{
			get
			{
				return this._Wrong;
			}
			set
			{
				if ((this._Wrong != value))
				{
					this._Wrong = value;
				}
			}
		}
	}
	
	public partial class get_user_infoResult
	{
		
		private int _PlayerID;
		
		private string _PlayerName;
		
		private System.Nullable<int> _PlayerLevel;
		
		private System.Nullable<int> _PlayerPoint;
		
		public get_user_infoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this._PlayerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="NVarChar(50)")]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this._PlayerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerLevel", DbType="Int")]
		public System.Nullable<int> PlayerLevel
		{
			get
			{
				return this._PlayerLevel;
			}
			set
			{
				if ((this._PlayerLevel != value))
				{
					this._PlayerLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerPoint", DbType="Int")]
		public System.Nullable<int> PlayerPoint
		{
			get
			{
				return this._PlayerPoint;
			}
			set
			{
				if ((this._PlayerPoint != value))
				{
					this._PlayerPoint = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
